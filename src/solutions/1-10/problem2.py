# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

class Fibonacci:
    def __init__(self, limit):
        self.limit = limit
        self.series = [0,1]
        self.sumOfSeries = 0
        
    def computeFibonacci(self, last, current):
        if last < 4000000 and current < 4000000 and last + current <= 4000000:
            nextValue = last + current
            last = current
            current = nextValue
            self.series.append(nextValue)
            self.computeFibonacci(last, current)
        return self.series
    
    def sumOfEvenValues(self):
        self.computeFibonacci(0,1)
        for n in self.series:
            if n%2 ==0:
                self.sumOfSeries += n
        
        return self.sumOfSeries
    

compute = Fibonacci(4000000)
print(compute.sumOfEvenValues())
print(compute.series)
        